import{_ as s,c as a,o as i,a5 as e}from"./chunks/framework.C61Lbh9p.js";const E=JSON.parse('{"title":"常见问题汇总","description":"","frontmatter":{},"headers":[],"relativePath":"en/guide/qa.md","filePath":"en/guide/qa.md"}'),n={name:"en/guide/qa.md"},t=e(`<h1 id="常见问题汇总" tabindex="-1">常见问题汇总 <a class="header-anchor" href="#常见问题汇总" aria-label="Permalink to &quot;常见问题汇总&quot;">​</a></h1><p>下面列举了一下常见问题</p><h2 id="为什么这个方法-功能不生效呢" tabindex="-1">为什么这个方法/功能不生效呢？ <a class="header-anchor" href="#为什么这个方法-功能不生效呢" aria-label="Permalink to &quot;为什么这个方法/功能不生效呢？&quot;">​</a></h2><p>大概率是版本问题，参考<a href="/laravel-admin-docs/zh-CN/guide/upgrading.html">版本升级</a>来升级你的版本。</p><h2 id="怎么设置语言呢" tabindex="-1">怎么设置语言呢？ <a class="header-anchor" href="#怎么设置语言呢" aria-label="Permalink to &quot;怎么设置语言呢？&quot;">​</a></h2><p>完成安装之后，默认语言为英文(en)，如果要使用中文，打开<code>config/app.php</code>，将<code>locale</code>设置为<code>zh-CN</code>即可。</p><p>如果上面修改之后，表单的验证信息还是英文的，那么可以安装<a href="https://github.com/caouecs/Laravel-lang" target="_blank" rel="noreferrer">Laravel-lang</a>来切换成中文。</p><h2 id="可以关掉pjax吗" tabindex="-1">可以关掉pjax吗？ <a class="header-anchor" href="#可以关掉pjax吗" aria-label="Permalink to &quot;可以关掉pjax吗？&quot;">​</a></h2><p>打开<code>app/Admin/bootstrap.php</code>，加入下面的代码：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Elegant\\Utils\\Facades\\Admin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Admin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">disablePjax</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h2 id="关于扩展自定义组件" tabindex="-1">关于扩展自定义组件 <a class="header-anchor" href="#关于扩展自定义组件" aria-label="Permalink to &quot;关于扩展自定义组件&quot;">​</a></h2><p><code>laravel-admin</code>默认引用了大量前端资源，如果有网络问题或者有不需要使用的组件，可以参考<a href="/laravel-admin-docs/zh-CN/guide/model-form-field-management.html">form组件管理</a>将其移除。</p><p>关于富文本编辑器，由于静态资源包文件普遍太大，所以<code>laravel-admin</code>默认通过cdn的方式引用<code>ckeditor</code>，建议大家根据自己的需求扩展编辑器，自行配置。</p><h2 id="关于前端资源问题" tabindex="-1">关于前端资源问题 <a class="header-anchor" href="#关于前端资源问题" aria-label="Permalink to &quot;关于前端资源问题&quot;">​</a></h2><p>如果需要使用自己的前端文件，可以在<code>app/Admin/bootstrap.php</code>中引入：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Admin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">css</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;path/to/your/css&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Admin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">js</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;path/to/your/js&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="重写登录页面和登录逻辑" tabindex="-1">重写登录页面和登录逻辑 <a class="header-anchor" href="#重写登录页面和登录逻辑" aria-label="Permalink to &quot;重写登录页面和登录逻辑&quot;">​</a></h2><p>在路由文件<code>app/Admin/routes.php</code>中，覆盖掉登录页面和登录逻辑的路由，即可实现自定义的功能</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Route</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">group</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;prefix&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        =&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;admin.prefix&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;namespace&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Admin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">controllerNamespace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;middleware&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;web&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;admin&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Router</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $router) {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    $router</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;auth/login&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;AuthController@getLogin&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    $router</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">post</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;auth/login&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;AuthController@postLogin&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p>在自定义的控制器<code>AuthController</code>中的<code>getLogin</code>、<code>postLogin</code>方法里分别实现自己的登录页面和登录逻辑。</p><p>参考控制器文件<a href="https://github.com/z-song/laravel-admin/blob/master/src/Controllers/AuthController.php" target="_blank" rel="noreferrer">AuthController.php</a>，视图文件<a href="https://github.com/z-song/laravel-admin/blob/master/views/login.blade.php" target="_blank" rel="noreferrer">login.blade.php</a></p><h2 id="更新静态资源" tabindex="-1">更新静态资源 <a class="header-anchor" href="#更新静态资源" aria-label="Permalink to &quot;更新静态资源&quot;">​</a></h2><p>如果遇到更新之后,部分组件不能正常使用,那有可能是<code>laravel-admin</code>自带的静态资源有更新了,需要运行命令<code>php artisan vendor:publish --tag=laravel-admin-assets --force</code>来重新发布前端资源，发布之后不要忘记清理浏览器缓存.</p><h2 id="页面乱码问题" tabindex="-1">页面乱码问题 <a class="header-anchor" href="#页面乱码问题" aria-label="Permalink to &quot;页面乱码问题&quot;">​</a></h2><p>在下载或者预览文件的时候，可能会遇到页面内容全部乱码的情况，出现这个问题的原因，是因为laravel-admin默认使用pjax来加载页面，它会读取要下载或者预览的内容来渲染到当前页面的内容区域。</p><p>解决办法是打开新页面来下载或者预览文件：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">a</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> href</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://xxxx&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> target</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;_blank&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">下载文件</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>a标签上添加<code>target=&quot;_blank&quot;</code>, 用新页面打开避免使用pjax加载页面。</p><h2 id="laravel-7-x的日期时间类型字段的显示问题" tabindex="-1">Laravel 7.x的日期时间类型字段的显示问题 <a class="header-anchor" href="#laravel-7-x的日期时间类型字段的显示问题" aria-label="Permalink to &quot;Laravel 7.x的日期时间类型字段的显示问题&quot;">​</a></h2><p>请先阅读 <a href="https://learnku.com/docs/laravel/7.x/upgrade/7445#date-serialization" target="_blank" rel="noreferrer">https://learnku.com/docs/laravel/7.x/upgrade/7445#date-serialization</a></p><p>如果想使用默认的<code>2020-03-04 16:11:00</code>格式，也可以在你的模型里面引入<code>Elegant\\Utils\\Traits\\DefaultDatetimeFormat</code></p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Elegant\\Utils\\Traits\\DefaultDatetimeFormat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> User</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Model</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> DefaultDatetimeFormat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="覆写内置视图" tabindex="-1">覆写内置视图 <a class="header-anchor" href="#覆写内置视图" aria-label="Permalink to &quot;覆写内置视图&quot;">​</a></h2><p>如果有需要自己修改view，但是不方便直接修改<code>laravel-admin</code>的情况，可以用下面的办法解决</p><p>复制<code>vendor/encore/laravel-admin/views</code>到项目的<code>resources/views/admin</code>，然后在<code>app/Admin/bootstrap.php</code>文件中加入代码：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 覆盖\`admin\`命名空间下的视图</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;view&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">prependNamespace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;admin&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resource_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;views/admin&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span></code></pre></div><p>这样就用<code>resources/views/admin</code>下的视图覆盖了<code>laravel-admin</code>的内置视图。</p><p>在laravel-admin每个新版本发布的时候, 内置视图都有可能会变更，所以如果你覆写了laravel-admin的视图，在更新laravel-admin版本的时候, 很有可能会出现视图方面的问题，这个需要你对照修改过的视图文件和内置视图自行修改解决。</p>`,38),h=[t];function l(p,k,r,d,o,c){return i(),a("div",null,h)}const F=s(n,[["render",l]]);export{E as __pageData,F as default};
